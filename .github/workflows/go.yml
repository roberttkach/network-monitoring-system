name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and Push Docker image for src
      run: |
        docker build -f Dockerfile -t src .
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag src:latest ${{ secrets.DOCKER_USERNAME }}/src:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/src:latest

    - name: Build and Push Docker image for grafana
      run: |
        docker build -f grafana/Dockerfile -t grafana grafana/
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag grafana:latest ${{ secrets.DOCKER_USERNAME }}/grafana:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/grafana:latest

    - name: Build and Push Docker image for prometheus 
      run: |
        docker build -f prometheus/Dockerfile -t prometheus prometheus/
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag prometheus:latest ${{ secrets.DOCKER_USERNAME }}/prometheus:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/prometheus:latest

    - name: Apply Kubernetes ConfigMap
      run: |
        kubectl create configmap prometheus-config --from-file=prometheus/prometheus.yaml
        kubectl create configmap grafana-config --from-file=grafana/dashboards.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl config set-cluster my-cluster --server=${{ secrets.KUBE_SERVER }} --certificate-authority=ca.crt
        kubectl config set-credentials github-action --token=${{ secrets.KUBE_TOKEN }}
        kubectl config set-context default --cluster=my-cluster --user=github-action
        kubectl config use-context default
        kubectl apply -f kuber.yaml
        kubectl rollout restart deployment/go-app-deployment
        kubectl rollout restart deployment/grafana-deployment
        kubectl rollout restart deployment/prometheus-deployment

